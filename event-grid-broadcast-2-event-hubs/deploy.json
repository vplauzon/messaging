{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "topicNamePrefix": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Prefix Event Grid Topics' names"
            }
        },
        "topicCount": {
            "type": "int",
            "metadata": {
                "description": "Number of Event Topics"
            }
        },
        "eventHubNamespacePrefix": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Prefix Event Hubs' names"
            }
        },
        "eventHubNamespaceCount": {
            "type": "int",
            "metadata": {
                "description": "Number of Event Hub Namespaces"
            }
        },
        "storageAccountName": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Name of the storage account for functions"
            }
        },
        "functionAppName": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Name of function app hosting functions that will feed the topics"
            }
        }
    },
    "variables": {
        "app plan name": "demo-app-plan",
        "alphabet": "ABCDEFGHIJKLMNOPQRSTUVXYZ",
        "event hub prefix": "hub",
        "event subscription prefix": "sub"
    },
    "resources": [
        {
            "type": "Microsoft.EventGrid/topics",
            "apiVersion": "2019-06-01",
            "copy": {
                "count": "[parameters('topicCount')]",
                "name": "topic-loop"
            },
            "name": "[concat(parameters('topicNamePrefix'), '-', add(1, copyIndex()))]",
            "location": "[resourceGroup().location]",
            "properties": {
                "inputSchema": "CloudEventV01Schema"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2017-04-01",
            "copy": {
                "count": "[parameters('eventHubNamespaceCount')]",
                "name": "namespace-loop"
            },
            "name": "[concat(parameters('eventHubNamespacePrefix'), '-', substring(variables('alphabet'), copyIndex(), 1))]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "zoneRedundant": false,
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0,
                "kafkaEnabled": true
            },
            "resources": [
                {
                    "type": "AuthorizationRules",
                    "apiVersion": "2017-04-01",
                    "name": "RootManageSharedAccessKey",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.EventHub/namespaces', concat(parameters('eventHubNamespacePrefix'), '-', substring(variables('alphabet'), copyIndex(), 1)))]"
                    ],
                    "properties": {
                        "rights": [
                            "Listen",
                            "Manage",
                            "Send"
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2017-04-01",
            "copy": {
                "count": "[mul(parameters('topicCount'), parameters('eventHubNamespaceCount'))]",
                "name": "hub-loop"
            },
            "name": "[concat(parameters('eventHubNamespacePrefix'), '-', substring(variables('alphabet'), div(copyIndex(), parameters('topicCount')), 1), '/', variables('event hub prefix'), '-', substring(variables('alphabet'), div(copyIndex(), parameters('topicCount')), 1), '-', add(1, mod(copyIndex(), parameters('topicCount'))))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', concat(parameters('eventHubNamespacePrefix'), '-', substring(variables('alphabet'), div(copyIndex(), parameters('topicCount')), 1)))]"
            ],
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 1
            }
        },
        {
            "type": "Microsoft.EventGrid/topics/providers/eventSubscriptions",
            "apiVersion": "2019-06-01",
            "copy": {
                "count": "[mul(parameters('topicCount'), parameters('eventHubNamespaceCount'))]",
                "name": "hub-loop"
            },
            "name": "[concat(parameters('topicNamePrefix'), '-', add(1, mod(copyIndex(), parameters('topicCount'))), '/Microsoft.EventGrid/', variables('event subscription prefix'), '-', add(1, div(copyIndex(), parameters('topicCount'))))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.EventGrid/topics', concat(parameters('topicNamePrefix'), '-', add(1, mod(copyIndex(), parameters('topicCount')))))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', concat(parameters('eventHubNamespacePrefix'), '-', substring(variables('alphabet'), div(copyIndex(), parameters('topicCount')), 1)), concat(variables('event hub prefix'), '-', substring(variables('alphabet'), div(copyIndex(), parameters('topicCount')), 1), '-', add(1, mod(copyIndex(), parameters('topicCount')))))]"
            ],
            "properties": {
                "eventDeliverySchema": "CloudEventV01Schema",
                "destination": {
                    "endpointType": "EventHub",
                    "properties": {
                        "resourceId": "[resourceId('Microsoft.EventHub/namespaces/eventhubs', concat(parameters('eventHubNamespacePrefix'), '-', substring(variables('alphabet'), div(copyIndex(), parameters('topicCount')), 1)), concat(variables('event hub prefix'), '-', substring(variables('alphabet'), div(copyIndex(), parameters('topicCount')), 1), '-', add(1, mod(copyIndex(), parameters('topicCount')))))]"
                    }
                },
                "filter": {
                    "isSubjectCaseSensitive": false
                }
            }
        },
        {
            "apiVersion": "2019-04-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2019-08-01",
            "name": "[variables('app plan name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "properties": {
                "name": "[variables('app plan name')]",
                "computeMode": "Dynamic"
            },
            "kind": "linux"
        },
        {
            "apiVersion": "2019-08-01",
            "type": "Microsoft.Web/sites",
            "name": "[parameters('functionAppName')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('app plan name'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('app plan name'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsSecretStorageType",
                            "value": "Files"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-04-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2019-04-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(parameters('functionAppName'))]"
                        },
                        {
                            "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
                            "value": "~2"
                        }
                    ]
                }
            },
            "resources": [
            ]
        }
    ]
}